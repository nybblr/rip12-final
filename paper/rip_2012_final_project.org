#+TITLE:     Tool Use via Inverse Kinematics
#+AUTHOR:    Adam Cantor, Jonathan Martin, Leo Keselman, Stewart Butler
#+EMAIL:     acantor6@gatech.edu, jmartin98@gatech.edu, chipper10@gatech.edu, sbutler6@gatech.edu
#+DATE:      2012-12-10 Mon

#+LATEX_CLASS: ieee
#+LATEX_CLASS_OPTIONS: [10pt, conference]

#+LATEX_HEADER: \usepackage{balance}
#+LATEX_HEADER: \usepackage[numbers]{natbib}
#+LATEX_HEADER: \usepackage{graphicx}
#+LATEX_HEADER: \usepackage{dsfont}
#+LATEX_HEADER: \usepackage{mathtools}
#+LATEX_HEADER: \usepackage{subfigure}
#+LATEX_HEADER: \usepackage{multirow} %For tables
#+LATEX_HEADER: \usepackage{pdflscape}
#+LATEX_HEADER: \usepackage{rotating}
#+LATEX_HEADER: \usepackage{tabularx}
#+LATEX_HEADER: \usepackage{amsfonts}
#+LATEX_HEADER: \usepackage{booktabs}
#+LATEX_HEADER: \usepackage[amssymb]{SIunits}
#+LATEX_HEADER: \usepackage{fancyhdr}
#+LATEX_HEADER: \usepackage[format=hang,font=small,labelfont=bf]{caption}
#+LATEX_HEADER: \usepackage{hyperref}


#+OPTIONS: toc:nil

# #+BEGIN_abstract
This report details a novel approach to known object interaction with a
Schunk Arm. A motion planning theorem is applied with a focus on
workspace control. The implementation of this system was done in the
GRIP/DART simulation environment designed/used by the Golems Lab at
Georgia Tech.
# #+END_abstract

* Introduction
  The purpose of this work is to create a methodology for interacting
  with known objects in a loosely defined workspace. This goal is
  directly in line with the DARPA robotics challenge to apply humanoid
  robots to search and rescue applications by using tools and
  exploration algorithms.

`* Related Work
  Tool manipulation in workspace is very common in both research and
  industry.

  What makes our system unique is that we account both for the motion
  planning for the robot as well as the constraints of the tool. For
  example, when driving the screw into the target block, we must follow
  the screw as it threads into the target block by matching 'downward'
  translation with the rotation of the screw driver, then back the tool
  out and repeat until the screw is settled into the block.

* Methods

  In the current experiments, there are three interactive objects and
  one robot arm. The interactive objects are a screwdriver, a bolt, and
  a goal block, all located within the arm's range of movement.

  Our system then follows the following set of actions to generate a
  plan.

** Locate screw
   After the screw is inserted into the world file, it is passed to the
   robot as a motion goal point. The robot queries the world to find the
   object and obtains the transform of the current tool position in the
   world's coordinate reference frame. The 4x4 affine matrix
   representing the rotation and translation of the screw is then
   converted into a 6x1 vector:
   \begin{equation}
   \dot{q} = \begin{bmatrix}
               \dot{a} \\
               \dot{w}
             \end{bmatrix}
   \end{equation}

   Here, \dot{a} is a three dimensional translation vector and \dot{w}
   is a roll, pitch, and yaw vector relative the world origin which
   define the origin of the screw.

** Grasp the screw
   Jacobian workspace control is used to align the robot's manipulator
   with the coordinate frame of the screw. After matching rotation and
   position with the target, the robot grabs the screw. Subsequently,
   the screw is manipulated as though it were an additional link in the
   arm.

** Locate goal
  3) Move the bolt to alignment with the goal.

** Release bolt

** Grasping tool
   Grasp the screwdriver; updating the end effector after each
     interaction.

** Move tool to screw
   After moving the screwdriver into the bolt, update the arm to include
     the bolt as well

** Drive screw into goal point
   Moving it into the goal position.

** Release bolt
  Release the bolt

** Release tool
   Replace the screwdriver back to its original position.

* Experiments

* Analysis

* Discussion
